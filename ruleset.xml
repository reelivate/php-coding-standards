<?xml version="1.0"?>
<ruleset name="Elevent PHP Coding Standard">
    <description>Elevent PHP coding standards</description>
    <config name="installed_paths" value="vendor/slevomat/coding-standard" />

    <arg value="wp" />
    <arg name="parallel" value="4" />
    <arg name="report" value="full" />
    <arg name="report-width" value="90" />

    <!-- Include the whole PSR1-2 standard -->
    <rule ref="PSR12">
        <exclude name="Generic.Files.LineLength" /><!-- phpcbf won't fix it and it doesn't matter much if at all -->
    </rule>

    <!-- database classes don't have namespaces -->
    <rule ref="PSR1.Classes.ClassDeclaration">
        <exclude-pattern>tests/TestCase.php</exclude-pattern>
        <exclude-pattern>database/*migrations/*</exclude-pattern>
    </rule>

    <!-- test classes can have non-CamelCapsMethodName  -->
    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <exclude-pattern>tests/*Test.php</exclude-pattern>
    </rule>

    <rule ref="Generic.Arrays.ArrayIndent">
        <exclude name="Generic.Arrays.ArrayIndent.CloseBraceNotNewLine" /><!-- MultiLine items causes evaluation as multiLine array https://github.com/squizlabs/PHP_CodeSniffer/issues/1791 -->
    </rule>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />
    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch" /><!-- Empty catch statements are allowed -->
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedIf" /><!-- Allow empty if statements - usually with a comment -->
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedElseif" /><!-- Allow empty elseif statements - usually with a comment -->
    </rule>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
    <rule ref="Generic.Commenting.Fixme" />
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Formatting.NoSpaceAfterCast" />
    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.ForbiddenFunctions" />
    <rule ref="Generic.PHP.LowerCaseConstant" />
    <rule ref="Generic.PHP.LowerCaseKeyword" />

    <rule ref="Squiz.Classes.ClassFileName">
        <exclude-pattern>database/*migrations/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.ControlStructures.ControlSignature" />
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
    <rule ref="Squiz.Functions.FunctionDeclaration" />
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1" />
        </properties>
    </rule>
    <rule ref="Squiz.Functions.GlobalFunction" />
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration" />
    <rule ref="Squiz.NamingConventions.ValidVariableName.NotCamelCaps" /><!-- camelCase variable names -->
    <rule ref="Squiz.Operators.ValidLogicalOperators" />
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops" />
    <rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired" /><!-- Single quote strings, except if they contain a variable -->
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

    <rule ref="SlevomatCodingStandard.Arrays.ArrayAccess" />
    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation" />
    <rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement" />
    <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace" />
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma" />

    <rule ref="SlevomatCodingStandard.Classes.BackedEnumTypeSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />
    <rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.ConstantSpacing">
        <properties>
            <property name="minLinesCountBeforeWithComment" value="1" />
            <property name="maxLinesCountBeforeWithComment" value="1" />
            <property name="minLinesCountBeforeWithoutComment" value="0" />
            <property name="maxLinesCountBeforeWithoutComment" value="0" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants" />
    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition" />
    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition" />
    <rule ref="SlevomatCodingStandard.Classes.DisallowStringExpressionPropertyFetch" />
    <rule ref="SlevomatCodingStandard.Classes.EnumCaseSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.MethodSpacing" />
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference" />
    <rule ref="SlevomatCodingStandard.Classes.PropertyDeclaration" />
    <rule ref="SlevomatCodingStandard.Classes.PropertySpacing" />
    <rule ref="SlevomatCodingStandard.Classes.RequireSingleLineMethodSignature">
        <properties>
            <property name="maxLineLength" value="130" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.RequireMultiLineMethodSignature">
        <properties>
            <property name="minLineLength" value="131" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming" />
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming" />
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousTraitNaming" />
    <rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration" />
    <rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">
        <properties>
            <property name="linesCountBeforeFirstUse" value="0" />
            <property name="linesCountBetweenUses" value="0" />
            <property name="linesCountAfterLastUse" value="1" />
            <property name="linesCountAfterLastUseWhenLastInClass" value="0" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding" />

    <rule ref="SlevomatCodingStandard.Commenting.AnnotationName" />
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment" />
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
        <properties>
            <property name="forbiddenAnnotations" type="array">
                <element value="@author" />
                <element value="@created" />
                <element value="@copyright" />
                <element value="@license" />
                <element value="@package" />
                <element value="@version" />
            </property>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments" />
    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration" />
    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment" />

    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowTrailingMultiLineTernaryOperator" />
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison" />
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses" />
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireMultiLineCondition">
        <properties>
            <property name="minLineLength" value="131" />
            <property name="alwaysSplitAllConditionParts" value="true" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator" />
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator" />

    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch" />
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
        <!-- Configured for Laravel and can be overridden locally -->
        <properties>
            <property name="rootNamespaces" type="array">
                <element key="app" value="App" />
                <element key="database/factories" value="Database\Factories" />
                <element key="database/seeders" value="Database\Seeders" />
                <element key="tests" value="Tests" />
            </property>
        </properties>
        <exclude-pattern>database/*migrations/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration">
        <properties>
            <property name="spacesCountAfterKeyword" value="0" />
            <property name="allowMultiLine" value="true" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.DisallowTrailingCommaInCall" />
    <rule ref="SlevomatCodingStandard.Functions.DisallowTrailingCommaInDeclaration" />
    <rule ref="SlevomatCodingStandard.Functions.NamedArgumentSpacing " />
    <rule ref="SlevomatCodingStandard.Functions.RequireMultiLineCall">
        <properties>
            <property name="minLineLength" value="131" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.RequireSingleLineCall">
        <properties>
            <property name="maxLineLength" value="130" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />

    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses">
        <properties>
            <property name="caseSensitive" value="false" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse" />
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine" />
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration" />
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing" />
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile" />
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash" />
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace" />
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias" />
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
        <properties>
            <property name="linesCountBetweenUseTypes" value="1" />
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing" />
    <rule ref="SlevomatCodingStandard.PHP.ShortList" />
    <rule ref="SlevomatCodingStandard.PHP.TypeCast" />
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses" />
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon" />

    <rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing" />
    <rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator" />
    <rule ref="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators" />
    <rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing" />

    <rule ref="SlevomatCodingStandard.Strings.DisallowVariableParsing" />

    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints" />
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue" />
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition" />
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing" />
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing" />

    <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable" />
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable" />

    <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces" />

</ruleset>
